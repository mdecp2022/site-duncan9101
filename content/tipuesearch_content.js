var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'W11', 'text': 'hw \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n \n \n \n import   ast \n \xa0 \xa0 \n # get stud_list first \n \xa0 \xa0 \n def   get_stud(c_name): \n \xa0\xa0\xa0\xa0 courses  =   { "1a" :  "0747" ,  "1b" :  "0761" ,  "2a" :  "0773" ,  "2b" :  "0786" } \n \xa0\xa0\xa0\xa0 c  =   courses[c_name] \n \xa0\xa0\xa0\xa0 url  =   "https://nfu.cycu.org/?semester=1111&courseno="   +   c  +   "&column=True" \n \xa0\xa0\xa0\xa0 data  =   open (url).read().split( "\\n" ) \n \xa0\xa0\xa0\xa0 stud  =   data[: - 1 ] \n \xa0\xa0\xa0\xa0 return   stud \n \xa0\xa0\xa0\xa0\xa0 \xa0 \n cp_stud  =   get_stud( "1a" ) \n \xa0 \xa0 \n # get w10 quiz result \n cp_w10_quiz_url  =   "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/9e8bf693a2805631aa12992db4d4f23e0f64e868/2022_1112_cp1a_w10_quiz.json" \n \xa0 \xa0 \n def   get_score(url): \n \xa0\xa0\xa0\xa0 json_data  =   open (url).read() \n \xa0\xa0\xa0\xa0 big_dict  =   ast.literal_eval(json_data) \n \xa0\xa0\xa0\xa0 data  =   big_dict[ "body" ][ "testuser" ] \n \xa0\xa0\xa0\xa0 quiz_dict  =   {} \n \xa0\xa0\xa0\xa0 for   i  in   data: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 stud_id  =   data[i][ "user_name" ] \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 stud_score  =   int ( float (data[i][ "total_score" ])) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 quiz_dict[stud_id]  =   stud_score \n \xa0\xa0\xa0\xa0 return   quiz_dict \n \xa0\xa0\xa0\xa0\xa0 \xa0 \n cp_quiz  =   get_score(cp_w10_quiz_url) \n cp_abs  =   [] \n for   stud  in   cp_stud: \n \xa0\xa0\xa0\xa0 try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (stud, cp_quiz[stud]) \n \xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 # 缺考者沒有 quiz 成績 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (stud,  "缺" ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 cp_abs.append(stud) \n # 列出缺考名單 \n print ( "=" * 20 ) \n print ( "以下為 w10 缺考名單:" ) \n for   stud  in   cp_abs: \n \xa0\xa0\xa0\xa0 print (stud) \n \n \n \n \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W15', 'text': '\n 1.為何學習計算機程式需要建立個人倉儲?\xa0 \n A:方便老師管理學生的個人網站 \n 2.全球資訊網能夠提供甚麼功能或有什麼優點? \n A:是一個透過網際網路存取的，由許多互相連結的超文字組成的資訊系統 \n 3.Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n A:Replit 必須隨時上網 \n A:stud.cycu.org\xa0必須隨時上網 \n A:localhost 只有在push時需要上網 \n 4.https, ssh 到底提供使用者那些功能或優點? \n A:https是一種網路安全傳輸協議，可實現瀏覽器和網站服務器數據傳輸加密 \n A:ssh是一種加密的網路傳輸協定，可在不安全的網路中為網路服務提供安全的傳輸環境 \n 5.Brython 與 Python 有甚麼差別? \n A:Brython就是在瀏覽器中使用的Python \n 6.能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n A:代表可以在網站上畫出2D圖形 \n 7.變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n A:了解這些可以讓我做出一段可執行的程式 \n', 'tags': '', 'url': 'W15.html'}, {'title': 'w13', 'text': 'ex1 \n \'\'\'\nf = c*9/5 + 32\nc = (f-32)*5/9\n\'\'\'\nc = input("請輸入攝氏溫度值")\n#print(type(c))\nc = float(c)\nprint("你輸入的攝氏溫度為: " +str(c), "等於華氏溫度: " +str(c*9/5 +32)) \n', 'tags': '', 'url': 'w13.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};